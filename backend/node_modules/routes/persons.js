'use strict';

var personsRouter = require('express').Router();
var DBQueries = require('../db/DBQueries.js');
var Controller = require('../controller');
var PGController = new Controller();
var DBService = require('../db/DBService.js');
var PGService = new DBService();

personsRouter
.get('/', function (request, response) {
  var res;
  PGService.performQuery(DBQueries.selectPersonsQuery(), PGService.selectRecords, function (status, data) {
    res = response.status(status);
    if (status === 200) {
      res.json(data);
    }
    return res.end();
  });
})
.get('/:iin', function (request, response) {
  var res;
  var person = {
    iin: String(request.params.iin)
  };
  if (PGController.validate(person, 'iin')) {
    PGService.performQuery(DBQueries.selectPersonQuery(person), PGService.selectRecord, function (status, data) {
      res = response.status(status);
      if (status === 200) {
        res.json(data);
      }
      return res.end();
    })
  } else {
    return response.status(400).end();
  }
})
.post('/', function (request, response) {
  var res;
  var person = {
    iin: String(request.body.iin),
    lastName: String(request.body.lastName),
    firstName: String(request.body.firstName),
    middleName: String(request.body.middleName),
    dob: String(request.body.dob),
    genderID: String(request.body.genderID)
  };
  if (PGController.validate(person, 'personData')) {
    PGService.performQuery(DBQueries.insertPersonQuery(person), PGService.insertRecord, function (status, data) {
      res = response.status(status);
      if (status === 201) {
        res.json(data);
      }
      return res.end();
    });
  } else {
    return response.status(400).end();
  }
})

module.exports = personsRouter;