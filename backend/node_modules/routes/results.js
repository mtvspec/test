var ProjectsResultRouter = require('express').Router({mergeParams: true}),
DBQueries = require('../db/DBQueries.js'),
Controller = require('../controller'), PGController = new Controller(),
DBService = require('../db/DBService.js'), PGService = new DBService();

ProjectsResultRouter
.route('/')
.get(function (request, response) {
  if (!request.params.id) {
    return response.status(400).end();
  }
  var project = {
    projectID: Number(request.params.id)
  };
  if (PGController.validate({id: project.projectID}, 'id')) {
    PGService.performQueryWL(
      DBQueries.selectProjectsResultsQuery(project),
      PGService.selectRecordsByIDWL,
      function (status, data) {
        return response.status(status)
        .json(data).end();
      }
    );
  } else {
    return response.status(400).end();
  }
})
.post(function (request, response) {
  if (!request.params.id) {
    return response.status(400).end();
  }
  var projectResult = {
    projectID: Number(request.params.id),
    typeID: Number(request.body.typeID),
    resultName: String(request.body.resultName),
    parentID: Number(request.body.parentID),
    authorID: String(request.body.authorID),
    responsiblePersonID: String(request.body.responsiblePersonID),
    statusID: Number(request.body.statusID)
  };
  if (!request.body.parentID) {
    projectResult = {
      projectID: Number(request.params.id),
      typeID: Number(request.body.typeID),
      resultName: String(request.body.resultName),
      parentID: null,
      authorID: String(request.body.authorID),
      responsiblePersonID: String(request.body.responsiblePersonID),
      statusID: Number(request.body.statusID)
    }
  }
  console.log(projectResult);
  if (PGController.validate(projectResult, 'projectResult')) {
    console.log('validated');
    PGService.performQueryWL(
      DBQueries.insertProjectResultQuery(projectResult),
      PGService.insertRecordWL,
      function (status, data) {
        return response.status(status)
        .json(data).end();
      }
    );
  } else {
    console.log('Bad request');
    return response.status(400).end();
  }
})

module.exports = ProjectsResultRouter;
