'use strict';

var tasksRouter = require('express').Router(),
DBQueries = require('../db/DBQueries.js'),
Controller = require('../controller'), PGController = new Controller(),
DBService = require('../db/DBService.js'), PGService = new DBService();

/* @RequestController */
tasksRouter
/* @RequestService */
.get('/', function (request, response) {
  PGService.performQuery(
    DBQueries.selectTasksQuery(),
    PGService.selectRecords,
    function (status, data) {
      return response.status(status)
      .json(data).end();
  });
})
/* @RequestService */
.get('/:id', function (request, response) {
  if (!request.params.id) {
    return response.status(400).end();
  }
  var task = {
    /* required */
    id: Number(request.params.id)
  };
  if (PGController.validate(task, 'id')) {
    PGService.performQuery(
      DBQueries.selectTaskQuery(task),
      PGService.selectRecord,
      function (status, data) {
        return response.status(status)
        .json(data).end();
    });
  } else {
    return response.status(400).end();
  }
})
/* @RequestService */
.post('/', function (request, response) {
  var task = {
    /* required length: 1 - 300 */
    taskName: String(request.body.taskName),
    /* length: 1 - 500 */
    taskDescription: String(request.body.taskDescription)
  };
  if (PGController.validate(task, 'taskData')) {
    PGService.performQuery(
      DBQueries.insertTaskQuery(task),
      PGService.insertRecord,
      function (status, data) {
        return response.status(status)
        .json(data).end();
    });
  } else {
    return response.status(400).end();
  }
})
/* @RequestService */
.put('/:id', function (request, response) {
  if (!request.params.id) {
    return response.status(400).end();
  }
  var task = {
    /* required */
    id: Number(request.params.id),
    /* required length: 1 - 300 */
    taskName: String(request.body.taskName),
    /* length: 1 - 500 */
    taskDescription: String(request.body.taskDescription)
  };
  if (PGController.validate(task, 'task')) {
    PGService.performQuery(
      DBQueries.updateTaskQuery(task),
      PGService.updateRecord,
      function (status, data) {
        return response.status(status)
        .json(data).end();
    });
  } else {
    return response.status(400).end();
  }
})
/* @RequestService */
.delete('/:id', function (request, response) {
  if (!request.params.id) {
    return response.status(400).end();
  }
  var task = {
    /* required */
    id: Number(equest.params.id)
  };
  if (PGController.validate(task, 'id')) {
    PGService.performQuery(
      DBQueries.deleteTaskQuery(task),
      PGService.deleteRecord,
      function (status) {
        return response.status(status)
        .json(data).end();
    });
  } else {
    return response.status(400).end();
  }
});

module.exports = tasksRouter;
