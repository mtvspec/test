'use strict';

var CompaniesRouter = require('express').Router(),
DBQueries = require('../db/DBQueries.js'),
Controller = require('../controller'), PGController = new Controller(),
DBService = require('../db/DBService.js'), PGService = new DBService();

/* @RequestController */
CompaniesRouter
/* @RequestService */
.get('/', function (request, response) {
  PGService.performQueryWL(
    DBQueries.selectCompaniesQuery(),
    PGService.selectRecordsWL,
    function (status, data) {
      return response.status(status)
      .json(data).end();
  });
})
/* @RequestService */
.get('/:id', function (request, response) {
  if (!request.params.id) {
    return response.status(400).end();
  }
  var company = {
    /* required */
    id: String(request.params.id)
  },
  companyLog = {
    sessionID: 2,
    manipulationTypeID: 'SELECT',
    companyID: company.id
  };
  if (PGController.validate(company, 'bin')) {
    PGService.performQueryWL(
      DBQueries.selectCompanyQuery(company),
      PGService.selectRecordWL,
      function (status, data) {
        return response.status(status)
        .json(data).end();
    });
  } else {
    return response.status(400).end();
  }
})
/* @RequestService */
.post('/', function (request, response) {
  var company = {
    /* required */
    id: String(request.body.id),
    /* required length: 1 - 500 */
    shortName: String(request.body.shortName),
    longName: String(request.body.longName),
    fullName: String(request.body.fullName)
  };
  console.log('Company:\n', company);
  if (PGController.validate(company, 'company')) {
    PGService.performQueryWL(
      DBQueries.insertCompanyQuery(company),
      PGService.insertRecordWL,
      function (status, data) {
        return response.status(status)
        .json(data).end();
    });
  } else {
    return response.status(400).end();
  }
})
/* @RequestService */
.put('/:id', function (request, response) {
  if (!request.params.id) {
    return response.status(400).end();
  }
  var company = {
    /* required */
    id: String(request.params.id),
    /* required length: 1 - 500 */
    shortName: String(request.body.shortName),
    longName: String(request.body.longName),
    fullName: String(request.body.fullName)
  }
  if (PGController.validate(company, 'company')) {
    PGService.performQueryWL(
      DBQueries.updateCompanyQuery(company),
      PGService.updateRecordWL,
      function (status, data) {
        return response.status(status)
        .json(data).end();
    });
  } else {
    return response.status(400).end();
  }
})
/* @RequestService */
.delete('/:id', function (request, response) {
  if (!request.params.id) {
    return response.status(400).end();
  }
  var company = {
    /* required */
    id: String(request.params.id)
  };
  if (PGController.validate(company, 'bin')) {
    PGService.performQueryWL(
      DBQueries.deleteCompanyQuery(company),
      PGService.deleteRecordWL,
      function (status, data) {
        return response.status(status)
        .json(data).end();
    });
  } else {
    return response.status(400).end();
  }
});

module.exports = CompaniesRouter;
