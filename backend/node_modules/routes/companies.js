'use strict';

var CompaniesRouter = require('express').Router(),
DBQueries = require('../db/DBQueries.js'),
DBService = require('../db/DBService.js'), PGService = new DBService();

/* @RequestController */
CompaniesRouter
/* @RequestService */
.get('/', function (request, response) {
  PGService.performQuery(
    DBQueries.selectCompaniesQuery(),
    DBQueries.selectCompaniesQueryLog(),
    PGService.selectRecords,
    function (status, data) {
      return response.status(status)
      .json(data).end();
  });
})
/* @RequestService */
.get('/:bin', function (request, response) {
  if (!request.params.bin) {
    return response.status(400).end();
  }
  var company = {
    bin: String(request.params.bin)
  };
  if (PGController.validate(company, 'bin')) {
    PGService.performQueryWithoutLogging(
      DBQueries.selectCompanyQuery(company),
      PGService.selectRecord,
      function (status, data) {
        return response.status(status)
        .json(data).end();
    });
  } else {
    return response.status(400).end();
  }
})
/* @RequestService */
.post('/', function (request, response) {
  var company = {
    bin: String(request.body.bin),
    companyName: String(request.body.companyName)
  };
  if (PGController.validate(company, 'companyData')) {
    PGService.performQueryWithoutLogging(
      DBQueries.insertCompanyQuery(company),
      PGService.insertRecord,
      function (status, data) {
        return response.status(status)
        .json(data).end();
    });
  } else {
    return response.status(400).end();
  }
})
/* @RequestService */
.put('/:bin', function (request, response) {
  if (!request.params.bin) {
    return response.status(400).end();
  }
  var company = {
    /* required */
    bin: String(request.params.bin),
    /* required length: 1 - 300 */
    companyName: String(request.body.companyName)
  };
  if (PGController.validate(company, 'company')) {
    PGService.performQueryWithoutLogging(
      DBQueries.updateCompanyQuery(company),
      PGService.updateRecord,
      function (status, data) {
        return response.status(status)
        .json(data).end();
    });
  } else {
    return response.status(400).end();
  }
})
/* @RequestService */
.delete('/:bin', function (request, response) {
  if (!request.params.bin) {
    return response.status(400).end();
  }
  var company = {
    /* required */
    bin: String(request.params.bin),
    /* required length: 1 - 300 */
    companyName: String(request.body.companyName)
  };
  if (PGController.validate(company, 'bin')) {
    PGService.performQueryWithoutLogging(
      DBQueries.deleteCompanyQuery(company),
      PGService.deleteRecord,
      function (status, data) {
        return response.status(status)
        .json(data).end();
    });
  } else {
    return response.status(400).end();
  }
});

module.exports = CompaniesRouter;
