var pg = require('pg');

function getUserRoles(userID) {
  return new Promise(function(resolve, reject) {
    pg.connect(function (err, client, done) {
      if (err) {
        console.log(err);
        reject({
          status: 500,
          error: error.detail
        });
      } else {
        client.query({
          text: 'SELECT u.user_id AS "userID", r.role_name AS "roleName" FROM meta.r_e_user_e_roles u, meta.e_roles r WHERE u.role_id = r.id AND user_id = $1;',
          values: [userID]
        }, function (err, result) {
          var rowCount;
          if (err) {
            console.log(err);
            reject({
              status: 500,
              error: error.detail
            });
          } else {
            done();
            rowCount = result.rowCount;
            if (rowCount === 0) {
              resolve({
                status: 204,
                roles: []
              });
            } else if (rowCount > 0) {
              resolve({
                status: 200,
                roles: result.rows
              });
            }
          }
        });
      }
    });
  });
};

getUserRoles(1).then(
  function (success) {
    console.log(success);
  }, function (failure) {
    console.log(failure);
  }
);
