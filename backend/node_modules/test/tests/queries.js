////////////////////////////////////////////////////////////////////////////////
'use strict';

var SQLStatements = {
  'persons': {
    'select persons': 'SELECT * FROM persons.e_persons ORDER BY id ASC;',
    'select person': 'SELECT * FROM persons.e_persons WHERE id = $1;'
  },
  'companies': {
    'select companies': 'SELECT * FROM companies.e_companies ORDER BY id ASC;',
    'select company': 'SELECT * FROM companies.e_companies WHERE id = $1;'
  }
};

module.exports = SQLStatements;
////////////////////////////////////////////////////////////////////////////////
'use strict';

var DataValidator = require('data-validator');

function RequestInterceptor(request) {
  if ((request.url.startsWith === '/api/persons/') && request.method === 'GET') {
    return DataValidator.validatePersonIIN(request.body);
  }
  if ((request.url.startsWith === '/api/persons/' && request.method === 'POST')) {
    return DataValidator.validatePerson(request.body);
  }
  if ((request.url.startsWith('/api/persons/') && request.method === 'PUT')) {
    return DataValidator.validatePerson(request.body);
  }
  if ((request.url.startsWith('/api/persons/')) && request.method === 'DELETE') {
    return DataValidator.validatePersonIIN(request.body);
  }
  if ((request.url.startsWith('/api/persons/')) && request.method === 'OPTIONS') {
    return DataValidator.validatePersonIIN(request.body);
  }
  throw new Error('No request interceptor for', request.url, request.method);
};

module.exports = RequestInterceptor;
////////////////////////////////////////////////////////////////////////////////
'use strict';

var PersonsModel = {
  persons: []
};

module.exports = PersonsModel;
////////////////////////////////////////////////////////////////////////////////
'use strict';

var SQLStatements = require('sql-statements'),
LTService = require('pg-service'), PersonsService = new LTService();

var PersonsModelService = {
  getPersons: function getPersons(cb) {
    if (PersonsModel.persons.length === 0) {
      PersonsService.selectRecords({
        text: SQLStatements['persons']['select persons']
      }).then(
        function (resolve) {
          cb(resolve.status, PersonsModel.persons.push(resolve.data[0]));
        },
        function (reject) {
          cb(resolve.status, resolve.message);
        }
      )
    }
  }
}

module.exports = PersonsModelService;
////////////////////////////////////////////////////////////////////////////////
