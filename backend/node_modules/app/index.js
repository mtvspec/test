'use strict';

var express = require('express'), app = express(), logger = require('morgan'),
cookieParser = require('cookie-parser'), bodyParser = require('body-parser'),
pg = require('pg'), messages = require('messages'),
Controller = require('../controller'), PGController = new Controller();
pg.defaults = {
  host: 'localhost',
  port: '5432',
  user: 'mtvspec',
  password: 'mtvspec',
  db: 'mtvspec'
};

// uncomment after placing your favicon in /public
//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());

app.use(function (request, response, next) {
  console.log(request.headers['x-real-ip'], request.method, request.url);
  var lang = request.body.lang;

  switch (request.url) {
    case request.url.startsWith('/api/users/login'):
    if (request.cookies.token) {
      return response.status(400)
      .json('Authentificated').end();
    }
    if (request.method === 'POST') {
      if (!(request.body.username && request.body.password)) {
        return response.status(400)
        .json(messages['User credentials not found'][lang]).end();
      } else if (!PGController.validate({
        username: String(request.body.username),
        password: String(request.body.password)
      }, 'user')) {
        return response.status(400)
        .json(messages['User credentials not correct'][lang]).end();
      }
    }
    break;
    case request.url.startsWith('/api/users/authorise/'):
    if (request.cookies.token) {
      return response.status(400)
      .json('Authorised').end();
    }
    if (request.method === 'GET') {
      if (!request.params || request.params.id) {
        return response.status(400)
        .json(messages['User id not found'][lang]).end();
      } else if (PGController.validate({
        id: Number(request.params.id)
      }, 'id')) {
        return response.status(400)
        .json(messages['User id not correct'][lang]).end();
      }
    }
    default:
  }

  next();
});

app.use('/api', require('routes'));

/*
// catch 404 and forward to error handler
app.use(function(req, res, next) {
  var err = new Error('Not Found');
  err.status = 404;
  next(err);
});
*/

// error handlers

// development error handler
// will print stacktrace
/*
if (app.get('env') === 'development') {
  app.use(function(err, req, res, next) {
    res.status(err.status || 500);
    res.render('error', {
      message: err.message,
      error: err
    });
  });
}
*/

// production error handler
// no stacktraces leaked to user
/*
app.use(function(err, req, res, next) {
  res.status(err.status || 500);
  res.render('error', {
    message: err.message,
    error: {}
  });
});
*/

module.exports = app;
