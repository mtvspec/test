'use strict';

var pg = require('pg');

function LTServiceC() {
};

LTServiceC.prototype.selectRecordsC = function selectRecordsC(query, cb) {
  if (!(query && typeof query === 'object')) {
    throw new Error('query not found');
    return cb({
      status: 500,
      message: 'error'
    });
  }
  if (!(query.text && typeof query.text === 'string')) {
    throw new Error('query text not found');
    return cb({
      status: 500,
      message: 'error'
    });
  }
  pg.connect(function (err, client, done) {
    if (err) {
      throw new Error(err);
      return cb(500, 'error');
    } else {
      client.query({
        text: query.text,
        values: query.values
      }, function (err, result) {
        var rowCount, status;
        if (err) {
          throw new Error(err);
          return cb(500, 'error');
        } else {
          rowCount = result.rowCount;
          if (rowCount === 0) {
            return cb(204, []);
          } else if (rowCount > 0) {
            return cb(200, result.rows);
          }
        }
      });
    }
  });
};

module.exports = LTServiceC;
