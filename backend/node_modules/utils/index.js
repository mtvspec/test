'use strict';

function Utils() {
};

Utils.prototype.toCamelCase = function toCamelCase(obj, cb) {
  var result = {},
  camelCase,
  key;
  for (key in obj) {
    if (obj.hasOwnProperty(key)) {
      camelCase = key.replace(/_([a-zA-Z])/g, function (match, part) {
        return part.toUpperCase();
      });
    }
    result[camelCase] = obj[key];
  }
  return cb(result);
};

function format(queryText, placeholders) {
  return queryText.replace(/{([^{}]*)}/g, function (match, partName) {
    var replacement = placeholders[partName];
    if (!replacement) {
      throw new Error('Not found');
    }
    return (typeof replacement === 'string') ||
    typeof replacement === 'number' ? replacement : match;
  });
};

Utils.prototype.formatQuery = function formatQuery(query) {
  console.log(query);
  var placeholders = {},
  replacements = [],
  counter = 1,
  key;
  for (key in query.values) {
    if (query.values.hasOwnProperty(key)) {
      placeholders[key] = '$' + counter;
      replacements.push(query.values[key]);
      counter++;
    }
  }
  query = {
    text: format(query.text, placeholders),
    values: replacements
  };
  return query;
};

module.exports = Utils;
