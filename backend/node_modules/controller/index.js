'use strict';

function Controller() {
};
/**
* @function validateData
* @param
* {object} data object to validate
* {string} type object type name
* @return
* @name success
* {true} res success validation result
* @name failure
* {false} res failure validation result
*/ 
Controller.prototype.validate = function validate(data, type, cb) {
  if (!(data && type)) {
    return cb(false);
  }
  var res;
  switch (type) {
  case 'id':
    (typeof data.id === 'number' && data.id > 0) ? res = true : res = false;
    return res;
    break;
  case 'taskData':
    if (data) {
      (typeof data.taskName === 'string' && data.taskName.length > 0 && data.taskName.length <= 300) ? res = true : res = false;
      if (data.taskDescription) {
        (res === true && typeof data.taskDescription === 'string' && data.taskDescription.length > 0 && data.taskDescription.length <= 500) ? res = true : res = false;
      }
      return cb(res);
    }
    return cb(false);
    break;
  case 'task':
    if (data) {
      (typeof data.id === 'number' && data.id > 0) ? res = true: res = false
      (res === true && typeof data.taskName === 'number' && data.taskName.length > 0 && data.taskName.length <= 300) ? res = true : res = false;
      if (data.taskDescription) {
        (res === true && typeof data.taskDescription === 'string' && data.taskDescription.length > 0 && data.taskDescription.length <= 500) ? res = true : res = false;
      }
      return cb(res);
    }
    return cb(false);
    break;
  case 'iin':
    (typeof data.iin === 'string' && /^\d{2}(0[1-9]|1[0-2])(0[1-9]|[1-2]\d|3[01])[0-6]\d{5}$/.test(data.iin)) ? res = true : res = false;
    return cb(res);
  case 'personData': // TODO реализовать проверку на наличие букв (только латиница и кирилица)
    if (!(data.iin && data.lastName && data.firstName && data.dob && data.genderID)) {
      res = false;
      return cb(res);
    }
    if (data.iin.length === 12 && typeof data.iin === 'string' && /^\d{2}(0[1-9]|1[0-2])(0[1-9]|[1-2]\d|3[01])[0-6]\d{5}$/.test(data.iin)) res = true; else res = false;
    if (res === true && typeof data.lastName === 'string' && data.lastName.length > 1 && data.lastName.length <= 200) res = true; else res = false;
    if (res === true && typeof data.firstName === 'string' && data.firstName.length > 1 && data.firstName.length <= 200) res = true; else res = false;
    if (res === true && typeof data.dob === 'string' && data.dob.length > 1) res = true; else res = false; // TODO реализовать проверку дат
    if (res === true && typeof data.genderID === 'string' && data.genderID === 'M' || data.genderID === 'F') res = true; else res = false;
    if (data.middleName) {
      if (res === true && typeof data.middleName === 'string' && data.middleName.length > 1 && data.middleName.length <= 200) res = true; else res = false;
    }
    return cb(res);
  default:
    throw new Error('Type not found');
    break;
  }
};

module.exports = Controller;